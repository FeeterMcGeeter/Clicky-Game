{"version":3,"sources":["components/Title/Title.module.css","components/GameCard/GameCard.module.css","components/Navbar/Navbar.module.css","components/Wrapper/Wrapper.module.css","images/Megaman.png","images/Fireman.png","images/Quickman.jpeg","images/Brightman.png","images/Skullman.png","images/Gravityman.png","images/Bubbleman.png","images/Sparkman.png","images/Heatman.png","images/Shadowman.png","images/Magnetman.png","images/Elecman.png","images/Snakeman.png","images/Tomahawkman.png","images/Topman.png","images/Crashman.png","images/Needleman.png","images/Ringman.png","images/Gyroman.png","images/Diveman.png","images/Blizzardman.png","images/Plantman.png","images/Stoneman.png","images/Astroman.png","images/Knightman.png","images/Starman.png","images/Toadman.png","images/Centaurman.png","components/Navbar/Navbar.js","components/Wrapper/Wrapper.js","components/Title/Title.js","components/GameCard/GameCard.js","Column.js","Container.js","Row.js","megaManCards.js","App.js","index.js"],"names":["module","exports","Navbar","className","styles","navbar","Wrapper","props","wrapper","children","Title","scoreIntructionsContainer","instructions","score","correctOrIncorrect","scores","highScore","GameCard","card","value","id","onClick","cardClickEvent","imgContainer","alt","name","src","image","Column","size","split","map","join","Container","Row","megaManCards","require","clicked","App","state","currentScore","indexOf","incrementScore","setState","concat","resetCards","newScore","shuffleCards","shuffledCards","arr","i","length","j","Math","floor","random","randomCardGenerator","title","this","gameCard","key","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f18289b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scoreIntructionsContainer\":\"Title_scoreIntructionsContainer__3VN8q\",\"instructions\":\"Title_instructions__2pdUq\",\"scores\":\"Title_scores__2nmTf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"GameCard_card__FP-Ao\",\"imgContainer\":\"GameCard_imgContainer__37K0A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__CLYHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Wrapper_wrapper__acrmz\"};","module.exports = __webpack_public_path__ + \"static/media/Megaman.eba19255.png\";","module.exports = __webpack_public_path__ + \"static/media/Fireman.756dd316.png\";","module.exports = __webpack_public_path__ + \"static/media/Quickman.71990b61.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Brightman.528f5b8a.png\";","module.exports = __webpack_public_path__ + \"static/media/Skullman.16652a4f.png\";","module.exports = __webpack_public_path__ + \"static/media/Gravityman.b39829fc.png\";","module.exports = __webpack_public_path__ + \"static/media/Bubbleman.14a813ba.png\";","module.exports = __webpack_public_path__ + \"static/media/Sparkman.9568d88a.png\";","module.exports = __webpack_public_path__ + \"static/media/Heatman.965c5dfb.png\";","module.exports = __webpack_public_path__ + \"static/media/Shadowman.5f276e84.png\";","module.exports = __webpack_public_path__ + \"static/media/Magnetman.ce9a2112.png\";","module.exports = __webpack_public_path__ + \"static/media/Elecman.28c9cf2c.png\";","module.exports = __webpack_public_path__ + \"static/media/Snakeman.79ab0880.png\";","module.exports = __webpack_public_path__ + \"static/media/Tomahawkman.fc402372.png\";","module.exports = __webpack_public_path__ + \"static/media/Topman.0f7565f7.png\";","module.exports = __webpack_public_path__ + \"static/media/Crashman.d598b84f.png\";","module.exports = __webpack_public_path__ + \"static/media/Needleman.63d862d7.png\";","module.exports = __webpack_public_path__ + \"static/media/Ringman.cc7c5048.png\";","module.exports = __webpack_public_path__ + \"static/media/Gyroman.aba9f73b.png\";","module.exports = __webpack_public_path__ + \"static/media/Diveman.11aa5261.png\";","module.exports = __webpack_public_path__ + \"static/media/Blizzardman.0b798396.png\";","module.exports = __webpack_public_path__ + \"static/media/Plantman.ff94fea0.png\";","module.exports = __webpack_public_path__ + \"static/media/Stoneman.e55f7bdd.png\";","module.exports = __webpack_public_path__ + \"static/media/Astroman.11647e01.png\";","module.exports = __webpack_public_path__ + \"static/media/Knightman.0197f0bc.png\";","module.exports = __webpack_public_path__ + \"static/media/Starman.1f2ed1d4.png\";","module.exports = __webpack_public_path__ + \"static/media/Toadman.ac46fd9e.png\";","module.exports = __webpack_public_path__ + \"static/media/Centaurman.d99d4776.png\";","import React from \"react\";\nimport styles from \"./Navbar.module.css\";\n\nconst Navbar = () => (\n  <nav className={styles.navbar}>\n      <h2>Mega Man Memory Game</h2>\n  </nav>\n);\n\nexport default Navbar;","import React from \"react\";\nimport styles from \"./Wrapper.module.css\";\n\nconst Wrapper = props => <div className={styles.wrapper}>{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport styles from \"./Title.module.css\";\n\nconst Title = props => (\n    <div className={styles.scoreIntructionsContainer}>\n        <div className={styles.instructions}>\n            {props.score === 0 ? <p>Click an image to start the game.<br></br>Be careful not to click the same image twice!</p> : <p>{props.correctOrIncorrect}</p>}\n        </div>\n        {/* <div className={styles.correctOrIncorrectText}>\n            <p>{props.correctOrIncorrect}</p>\n        </div> */}\n        <div className={styles.scores}>\n            <p>Current Score: {props.score}</p>\n            <p>High Score: {props.highScore}</p>\n        </div>\n    </div>\n)\n\nexport default Title;","import React from \"react\";\nimport styles from \"./GameCard.module.css\";\n\nconst GameCard = props => (\n  <div\n    className={styles.card}\n    value={props.id} \n    onClick={() => props.cardClickEvent(props.id)}\n  >\n    <div className={styles.imgContainer}>\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default GameCard;","import React from \"react\";\n\nconst Column = props => {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n  return (\n    <div className={size}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Column;","import React from \"react\";\n\nconst Container = props =>\n  <div className=\"container\">\n    {props.children}\n  </div>;\n\nexport default Container;","import React from \"react\";\n\nconst Row = props =>\n  <div className=\"row d-flex justify-content-center\">\n    {props.children}\n  </div>;\n\nexport default Row;","const megaManCards = [\n    {\n        id: 1,\n        name: \"Mega Man\",\n        image: require(\"./images/Megaman.png\"),\n        clicked: false\n    },\n    {\n        id: 2,\n        name: \"Fire Man\",\n        image: require(\"./images/Fireman.png\"),\n        clicked: false\n    },\n    {\n        id: 3,\n        name: \"Quick Man\",\n        image: require(\"./images/Quickman.jpeg\"),\n        clicked: false\n    },\n    {\n        id: 4,\n        name: \"Bright Man\",\n        image: require(\"./images/Brightman.png\"),\n        clicked: false\n    },\n    {\n        id: 5,\n        name: \"Skull Man\",\n        image: require(\"./images/Skullman.png\"),\n        clicked: false\n    },\n    {\n        id: 6,\n        name: \"Gravity Man\",\n        image: require(\"./images/Gravityman.png\"),\n        clicked: false\n    },\n    {\n        id: 7,\n        name: \"Bubble Man\",\n        image: require(\"./images/Bubbleman.png\"),\n        clicked: false\n    },\n    {\n        id: 8,\n        name: \"Spark Man\",\n        image: require(\"./images/Sparkman.png\"),\n        clicked: false\n    },\n    {\n        id: 9,\n        name: \"Heat Man\",\n        image: require(\"./images/Heatman.png\"),\n        clicked: false\n    },\n    {\n        id: 10,\n        name: \"Shadow Man\",\n        image: require(\"./images/Shadowman.png\"),\n        clicked: false\n    },\n    {\n        id: 11,\n        name: \"Magnet Man\",\n        image: require(\"./images/Magnetman.png\"),\n        clicked: false\n    },\n    {\n        id: 12,\n        name: \"Elec Man\",\n        image: require(\"./images/Elecman.png\"),\n        clicked: false\n    },\n    {\n        id: 13,\n        name: \"Snake Man\",\n        image: require(\"./images/Snakeman.png\"),\n        clicked: false\n    },\n    {\n        id: 14,\n        name: \"Tomahawk Man\",\n        image: require(\"./images/Tomahawkman.png\"),\n        clicked: false\n    },\n    {\n        id: 15,\n        name: \"Top Man\",\n        image: require(\"./images/Topman.png\"),\n        clicked: false\n    },\n    {\n        id: 16,\n        name: \"Crash Man\",\n        image: require(\"./images/Crashman.png\"),\n        clicked: false\n    },\n    {\n        id: 17,\n        name: \"Needle Man\",\n        image: require(\"./images/Needleman.png\"),\n        clicked: false\n    },\n    {\n        id: 18,\n        name: \"Ring Man\",\n        image: require(\"./images/Ringman.png\"),\n        clicked: false\n    },\n    {\n        id: 19,\n        name: \"Gyro Man\",\n        image: require(\"./images/Gyroman.png\"),\n        clicked: false\n    },\n    {\n        id: 20,\n        name: \"Dive Man\",\n        image: require(\"./images/Diveman.png\"),\n        clicked: false\n    },\n    {\n        id: 21,\n        name: \"Blizzard Man\",\n        image: require(\"./images/Blizzardman.png\"),\n        clicked: false\n    },\n    {\n        id: 22,\n        name: \"Plant Man\",\n        image: require(\"./images/Plantman.png\"),\n        clicked: false\n    },\n    {\n        id: 23,\n        name: \"Stone Man\",\n        image: require(\"./images/Stoneman.png\"),\n        clicked: false\n    },\n    {\n        id: 24,\n        name: \"Astro Man\",\n        image: require(\"./images/Astroman.png\"),\n        clicked: false\n    },\n    {\n        id: 25,\n        name: \"Knight Man\",\n        image: require(\"./images/Knightman.png\"),\n        clicked: false\n    },\n    {\n        id: 26,\n        name: \"Star Man\",\n        image: require(\"./images/Starman.png\"),\n        clicked: false\n    },\n    {\n        id: 27,\n        name: \"Toad Man\",\n        image: require(\"./images/Toadman.png\"),\n        clicked: false\n    },\n    {\n        id: 28,\n        name: \"Centaur Man\",\n        image: require(\"./images/Centaurman.png\"),\n        clicked: false\n    }\n];\n\nexport default megaManCards;\n","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport GameCard from \"./components/GameCard\"\nimport Column from \"./Column\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport megaManCards from \"./megaManCards.js\";\nimport \"./App.css\";\n\n// SHUFFLING THE GAME CARDS\nfunction randomCardGenerator(arr) {\n  for (let i = arr.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n}\n\nclass App extends Component {\n  state = {\n    megaManCards,\n    currentScore: 0,\n    highScore: 0,\n    correctOrIncorrect: \"\",\n    clicked: []\n  }\n\n  // CLICK HANDLER EVENT FOR THE GAME CARDS\n  cardClickEvent = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.incrementScore();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.resetCards();\n    }\n  }\n\n  // INCREMENT THE SCORE \n  incrementScore = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      correctOrIncorrect: \"You Guessed Correctly!\"\n    })\n    if (newScore >= this.state.highScore) {\n      this.setState({ highScore: newScore });\n    } else if (newScore === 20) {\n      this.setState({ correctOrIncorrect: \"You Guessed All Cards Correctly! You Win!\" });\n    }\n    this.shuffleCards();\n  }\n\n  // SHUFFLING THE CARDS\n  shuffleCards = () => {\n    let shuffledCards = randomCardGenerator(megaManCards);\n    this.setState({ megaManCards: shuffledCards });\n  }\n\n  // RESET THE CARDS WHEN THE GAME STARTS OVER\n  resetCards = () => {\n    this.setState({\n      currentScore: 0,\n      highScore: this.state.highScore,\n      correctOrIncorrect: \"You Guessed Incorrectly!\",\n      clicked: []\n    })\n  }\n\n  // RENDERING THE PAGE \n  render() {\n    return (\n      <Wrapper>\n        <Navbar\n          title=\"Mega Man Memory Game\"\n        />\n        <Title\n          score={this.state.currentScore}\n          highScore={this.state.highScore}\n          correctOrIncorrect={this.state.correctOrIncorrect}\n        />\n        <Container>\n          <Row>\n            {this.state.megaManCards.map(gameCard => (\n              <Column size=\"\">\n                <GameCard\n                  key={gameCard.id}\n                  cardClickEvent={this.cardClickEvent}\n                  incrementScore={this.incrementScore}\n                  shuffleCards={this.shuffleCards}\n                  resetCards={this.resetCards}\n                  id={gameCard.id}\n                  image={gameCard.image}\n                />\n              </Column>\n            ))}\n          </Row>\n        </Container>\n      </Wrapper>\n    )\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}